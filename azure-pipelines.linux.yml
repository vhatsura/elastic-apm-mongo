jobs:
  - ${{ each mongoDriverVersion in parameters.mongoDriverVersions }}:
      - job:
        displayName: ${{ format('MongoDB Driver Version:{0}', mongoDriverVersion) }}
        variables:
          # workaround due to https://github.com/GitTools/GitVersion/pull/2221
          MSBUILDSINGLELOADCONTEXT: 1
        pool:
          vmImage: ubuntu-latest
        # container: mcr.microsoft.com/dotnet/core/sdk:3.1
        steps:
          - task: UseDotNet@2
            displayName: Install .Net Core 2.2.x SDK
            inputs:
              packageType: sdk
              version: '2.2.x'

          # by installing .net core 2.2 we override global path to dotnet executable
          # In such case host machine decides that only .Net Core 2.2 is installed 
          - task: UseDotNet@2
            displayName: Install .Net Core 3.1.x SDK
            inputs:
              packageType: sdk
              # workaround due to https://github.com/GitTools/GitVersion/pull/2221
              version: '3.1.103'

          - script: sed -i -E "s/(<PackageReference Include=\"MongoDB.Driver\" Version=\").*(\" \/>)/\1${{ mongoDriverVersion }}\2/" ./tests/Elastic.Apm.Mongo.IntegrationTests/Elastic.Apm.Mongo.IntegrationTests.csproj
            displayName: Replace MongoDB.Driver version

          - script: cat ./tests/Elastic.Apm.Mongo.IntegrationTests/Elastic.Apm.Mongo.IntegrationTests.csproj
            displayName: Print replaced content

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: restore
              # disable parallel restore due to https://github.com/GitTools/GitVersion/issues/1381
              arguments: '--disable-parallel --configuration $(buildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              arguments: '--no-restore --disable-parallel --configuration $(buildConfiguration) -v normal'

          - task: DotNetCoreCLI@2
            displayName: Test
            inputs:
              command: test
              arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'
